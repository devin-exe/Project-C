Catharsis is a group of scripts designed to secure a virtual machine for the CyberPatriot competition. The following README is an AI-Generated step by step guide to running the script on your virtual machine.

CyberPatriot Security Hardening Script
This batch script automates various security hardening tasks on a Windows system, primarily focusing on user management, administrator privileges, and enabling core security features to help secure an operating system, often for a competition like CyberPatriot.

üõë Critical Prerequisite
This script makes significant changes to your system's user accounts and security settings. It is essential to understand that this will delete unauthorized user accounts and change the passwords for all authorized users (except the one running the script).

MUST BE RUN AS ADMINISTRATOR

‚öôÔ∏è Requirements & Setup
Before running the script, you must create two required text files in the same directory as the batch file:

users.txt: A list of all standard (non-admin) authorized user accounts that should exist on the system.

Format: One username per line.

Example:

student1
techuser
john_doe
admins.txt: A list of all authorized administrator user accounts that should be in the Administrators group.

Format: One username per line.

Example:

cyberadmin
teamlead
Optional Files
LGPO.exe and Policies Folder: The script attempts to apply Local Group Policy Objects (GPOs) from a subdirectory named Policies using the Microsoft tool LGPO.exe. If these are not present, the script will skip the GPO application step and issue a warning.

üöÄ How to Run the Script
Save the script as a Windows Batch file (e.g., harden.bat).

Ensure you have created and correctly populated the users.txt and admins.txt files in the same folder.

Right-click on the batch file (harden.bat).

Select "Run as administrator".

Allow the script to run. It will output its progress to the console.

The script will pause at the end, displaying a final message. Press any key to close the window.

‚úÖ What the Script Does
Section 1: User and Administrator Management
Action	Description
Remove Unauthorized Users	Deletes any local user accounts found that are not listed in users.txt or admins.txt (and not on the system ignore list).
Demote Unauthorized Admins	Removes any users from the Administrators group if they are not listed in admins.txt.
Create and Secure Users	Ensures every user listed in users.txt exists. It then resets the password for all authorized users (except the currently logged-in user) to a new, randomly generated, 14-character secure password.
Authorize Admins	Ensures every user listed in admins.txt is a member of the Administrators group.

Export to Sheets
Section 2: Security Hardening
Action	Description
Windows Security	Enables core Windows Defender features: Real-time Monitoring and Behavior Monitoring.
Windows Firewall	Sets the Windows Defender Firewall state to ON for all network profiles (Domain, Private, and Public).
Local Group Policy	Attempts to apply security policies from a local Policies folder using LGPO.exe (if available).
Windows Updates	Initiates a PowerShell process to install the PSWindowsUpdate module, then checks for and installs all available Windows updates.

Export to Sheets
üìù Output and Logs
Upon completion, the script generates two files in the same directory:

Password_Changes.log: This is a critical log file that lists the new, randomly generated passwords for all authorized users.

Windows_Update_Log.txt: A log generated by the Windows Update process, detailing the results of the update installation.

‚ö†Ô∏è Important Notes
A reboot is highly recommended after the script completes to ensure all policy and update changes are fully applied.

The script does not change the password for the user account that executed the script.

System accounts like Administrator, Guest, DefaultAccount, and WDAGUtilityAccount are intentionally ignored and not deleted.
